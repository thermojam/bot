const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const bodyParser = require('body-parser');
const app = express();

// === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
const TOKEN = process.env.TELEGRAM_TOKEN;
const URL = process.env.RENDER_EXTERNAL_URL || 'https://bot-gupk.onrender.com';
const PORT = process.env.PORT || 3000;

const bot = new TelegramBot(TOKEN);
bot.setWebHook(`${URL}/bot${TOKEN}`);

app.use(bodyParser.json());

// === –í–µ–±—Ö—É–∫ ===
app.post(`/bot${TOKEN}`, (req, res) => {
    bot.processUpdate(req.body);
    res.sendStatus(200);
});

app.get('/', (req, res) => {
    res.send('ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!');
});

app.listen(PORT, () => {
    console.log(`Express-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

// === –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ ===
const subscribedChats = new Set();

// === –°—Ç–∞—Ä—Ç ===
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const firstName = msg.from.first_name;

    subscribedChats.add(chatId);

    const welcomeMessage = `–ü—Ä–∏–≤–µ—Ç, ${firstName}! üëã\n\n–Ø –ö—Å–µ–Ω–∏—è ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∑–¥–æ—Ä–æ–≤—å—é –∏ –±–∞–ª–∞–Ω—Å—É.\n\n–•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–∏–¥–µ–æ—É—Ä–æ–∫?\n\n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –±–ª–∏–∂–µ üëá`;

    const options = {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: 'üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è üü£', callback_data: 'psychology' },
                    { text: 'üßò –ì–∏–º–Ω–∞—Å—Ç–∏–∫–∞ üîµ', callback_data: 'gymnastics' }
                ],
                [
                    { text: 'ü•ó –ù—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–∏—è üü¢', callback_data: 'nutrition' }
                ]
            ]
        }
    };

    bot.sendMessage(chatId, welcomeMessage, options);
});

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ ===
bot.on('callback_query', (callbackQuery) => {
    const chatId = callbackQuery.message.chat.id;
    const data = callbackQuery.data;

    if (data === 'want_course') {
        const saleMessage = `‚ú® *–ó–∞–ø–∏—à–∏—Å—å –Ω–∞ –∫—É—Ä—Å!*\n\n–¢—ã —Å–¥–µ–ª–∞–ª–∞ –ø–µ—Ä–≤—ã–π —à–∞–≥. –ì–æ—Ç–æ–≤–∞ —É–≥–ª—É–±–∏—Ç—å—Å—è –≤ –∑–Ω–∞–Ω–∏—è?\n\nüîπ –£–Ω–∏–∫–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\nüîπ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –ö—Å–µ–Ω–∏–∏\nüîπ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ`;

        return bot.sendMessage(chatId, saleMessage, { parse_mode: 'Markdown' });
    }

    // –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤–µ—Ç–∫–∏
    let messageText = '';
    let lessonLink = '';

    switch (data) {
        case 'psychology':
            messageText = `üß† *–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è*\n\n–í–æ—Ç –≤–∏–¥–µ–æ—É—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–µ–±–µ –∏ –æ–±—Ä–µ—Å—Ç–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –±–∞–ª–∞–Ω—Å.`;
            lessonLink = 'https://www.youtube.com/watch?v=iLlrIi9-NfQ';
            break;
        case 'gymnastics':
            messageText = `üßò *–°–ª–∞–≤—è–Ω—Å–∫–∞—è –≥–∏–º–Ω–∞—Å—Ç–∏–∫–∞*\n\n–ü–æ–ø—Ä–æ–±—É–π –¥—Ä–µ–≤–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∏ –∂–µ–Ω—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏.`;
            lessonLink = 'https://www.youtube.com/watch?v=-wqLcfcA_ig';
            break;
        case 'nutrition':
            messageText = `ü•ó *–ù—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–∏—è*\n\n–ù–∞—É—á–∏—Å—å –ø–∏—Ç–∞—Ç—å—Å—è –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ –∏ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –ª—É—á—à–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.`;
            lessonLink = 'https://www.youtube.com/watch?v=-e-4Kx5px_I';
            break;
    }

    const lessonMessage = `${messageText}\n\nüëâ [–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ](${lessonLink})`;

    const options = {
        parse_mode: 'Markdown',
        reply_markup: {
            inline_keyboard: [
                [{ text: 'üìö –•–æ—á—É –∫—É—Ä—Å!', callback_data: 'want_course' }]
            ]
        }
    };

    bot.sendMessage(chatId, lessonMessage, options);
});


function sendDailyBroadcast() {
    const message = `üåü –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏ –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏!

–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –º–æ–π Telegram-–∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É üôå`;

    const options = {
        reply_markup: {
            inline_keyboard: [
                [{ text: 'üîî –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª', url: 'https://t.me/ksenia_kmensky' }]
            ]
        }
    };

    subscribedChats.forEach((chatId) => {
        bot.sendMessage(chatId, message, options).catch((err) => {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ —á–∞—Ç ${chatId}:`, err.message);
        });
    });
}

setInterval(sendDailyBroadcast, 6 * 60 * 60 * 1000);
